Running on Qo v0.4.0 at rev 96607b76bba3fea60d46e118a67fa5b4c76d5c72
 - Ruby ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-darwin17]

Array * Array - Literal
=======================

Vanilla result: true
Qo.and result: true

Warming up --------------------------------------
             Vanilla   275.772k i/100ms
              Qo.and    77.013k i/100ms
Calculating -------------------------------------
             Vanilla      8.911M (± 2.0%) i/s -     44.675M in   5.015740s
              Qo.and    992.994k (± 1.7%) i/s -      5.006M in   5.042624s

Comparison:
             Vanilla:  8910560.1 i/s
              Qo.and:   992994.3 i/s - 8.97x  slower


Array * Array - Index pattern match
===================================

Vanilla result: true
Qo.and result: true

Warming up --------------------------------------
             Vanilla    48.662k i/100ms
              Qo.and    22.868k i/100ms
Calculating -------------------------------------
             Vanilla    569.942k (± 1.6%) i/s -      2.871M in   5.038819s
              Qo.and    247.240k (± 2.8%) i/s -      1.258M in   5.091282s

Comparison:
             Vanilla:   569942.4 i/s
              Qo.and:   247239.9 i/s - 2.31x  slower


Array * Object - Predicate match
================================

Vanilla result: false
Qo.and result: false

Warming up --------------------------------------
             Vanilla   142.790k i/100ms
              Qo.and    28.458k i/100ms
Calculating -------------------------------------
             Vanilla      2.251M (± 1.8%) i/s -     11.280M in   5.012252s
              Qo.and    315.757k (± 1.8%) i/s -      1.594M in   5.048759s

Comparison:
             Vanilla:  2251336.4 i/s
              Qo.and:   315757.2 i/s - 7.13x  slower


Array * Array - Select index pattern match
==========================================

Vanilla result: [["Robert", 22], ["Roberta", 22]]
Qo.and result: [["Robert", 22], ["Roberta", 22]]

Warming up --------------------------------------
             Vanilla    14.162k i/100ms
              Qo.and     7.559k i/100ms
Calculating -------------------------------------
             Vanilla    150.748k (± 1.7%) i/s -    764.748k in   5.074423s
              Qo.and     78.082k (± 1.6%) i/s -    393.068k in   5.035396s

Comparison:
             Vanilla:   150748.3 i/s
              Qo.and:    78082.2 i/s - 1.93x  slower


Hash * Hash - Hash intersection
===============================

Vanilla result: [{:name=>"Robert", :age=>22}, {:name=>"Roberta", :age=>22}]
Qo.and result: [{:name=>"Robert", :age=>22}, {:name=>"Roberta", :age=>22}]

Warming up --------------------------------------
             Vanilla    35.977k i/100ms
              Qo.and     5.112k i/100ms
Calculating -------------------------------------
             Vanilla    410.483k (± 1.3%) i/s -      2.087M in   5.084305s
              Qo.and     51.860k (± 1.6%) i/s -    260.712k in   5.028458s

Comparison:
             Vanilla:   410483.2 i/s
              Qo.and:    51860.4 i/s - 7.92x  slower


Hash * Object - Property match
==============================

Vanilla result: [#<struct Person name="Robert", age=22>, #<struct Person name="Roberta", age=22>]
Qo.and result: [#<struct Person name="Robert", age=22>, #<struct Person name="Roberta", age=22>]

Warming up --------------------------------------
             Vanilla    36.219k i/100ms
              Qo.and     5.415k i/100ms
Calculating -------------------------------------
             Vanilla    412.314k (± 1.3%) i/s -      2.064M in   5.007920s
              Qo.and     55.712k (± 1.6%) i/s -    281.580k in   5.055626s

Comparison:
             Vanilla:   412313.9 i/s
              Qo.and:    55711.7 i/s - 7.40x  slower

