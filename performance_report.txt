Running on Qo v0.3.0 at rev 77eb2544c41b33361a561178b145d33fa2409bde
 - Ruby ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-darwin17]

Array * Array - Literal
=======================

Vanilla result: true
Qo.and result: true

Warming up --------------------------------------
             Vanilla   275.791k i/100ms
              Qo.and    77.679k i/100ms
Calculating -------------------------------------
             Vanilla      8.805M (± 1.6%) i/s -     44.127M in   5.012793s
              Qo.and    987.041k (± 2.8%) i/s -      4.971M in   5.040741s

Comparison:
             Vanilla:  8805260.8 i/s
              Qo.and:   987041.0 i/s - 8.92x  slower


Array * Array - Index pattern match
===================================

Vanilla result: true
Qo.and result: true

Warming up --------------------------------------
             Vanilla    45.347k i/100ms
              Qo.and    21.225k i/100ms
Calculating -------------------------------------
             Vanilla    550.096k (± 2.4%) i/s -      2.766M in   5.031463s
              Qo.and    226.391k (± 4.2%) i/s -      1.146M in   5.072495s

Comparison:
             Vanilla:   550096.4 i/s
              Qo.and:   226391.4 i/s - 2.43x  slower


Array * Object - Predicate match
================================

Vanilla result: false
Qo.and result: false

Warming up --------------------------------------
             Vanilla   139.508k i/100ms
              Qo.and    27.451k i/100ms
Calculating -------------------------------------
             Vanilla      2.148M (± 3.3%) i/s -     10.742M in   5.007009s
              Qo.and    303.118k (± 2.0%) i/s -      1.537M in   5.073596s

Comparison:
             Vanilla:  2147916.4 i/s
              Qo.and:   303118.1 i/s - 7.09x  slower


Array * Array - Select index pattern match
==========================================

Vanilla result: [["Robert", 22], ["Roberta", 22]]
Qo.and result: [["Robert", 22], ["Roberta", 22]]

Warming up --------------------------------------
             Vanilla    12.651k i/100ms
              Qo.and     7.024k i/100ms
Calculating -------------------------------------
             Vanilla    141.337k (± 8.3%) i/s -    708.456k in   5.067441s
              Qo.and     73.799k (± 2.9%) i/s -    372.272k in   5.048946s

Comparison:
             Vanilla:   141336.5 i/s
              Qo.and:    73799.3 i/s - 1.92x  slower


Hash * Hash - Hash intersection
===============================

Vanilla result: [{:name=>"Robert", :age=>22}, {:name=>"Roberta", :age=>22}]
Qo.and result: [{:name=>"Robert", :age=>22}, {:name=>"Roberta", :age=>22}]

Warming up --------------------------------------
             Vanilla    34.600k i/100ms
              Qo.and     4.851k i/100ms
Calculating -------------------------------------
             Vanilla    392.298k (± 2.6%) i/s -      1.972M in   5.030828s
              Qo.and     48.213k (± 4.8%) i/s -    242.550k in   5.043068s

Comparison:
             Vanilla:   392298.2 i/s
              Qo.and:    48213.1 i/s - 8.14x  slower


Hash * Object - Property match
==============================

Vanilla result: [#<struct Person name="Robert", age=22>, #<struct Person name="Roberta", age=22>]
Qo.and result: [#<struct Person name="Robert", age=22>, #<struct Person name="Roberta", age=22>]

Warming up --------------------------------------
             Vanilla    32.783k i/100ms
              Qo.and     4.422k i/100ms
Calculating -------------------------------------
             Vanilla    361.140k (± 9.7%) i/s -      1.803M in   5.053763s
              Qo.and     46.667k (±10.8%) i/s -    229.944k in   5.002258s

Comparison:
             Vanilla:   361140.4 i/s
              Qo.and:    46667.1 i/s - 7.74x  slower

